--- a/src/play.rs	2024-01-17 22:50:25.709380651 +0100
+++ b/src/play.rs	2024-01-17 23:39:08.715395211 +0100
@@ -4,7 +4,6 @@
 use crate::types::*;
 use crate::utils::*;
 use crate::vpn::*;
-use std::env;
 use std::io::{self,Write};
 use reqwest::Client;
 use serde::Serialize;
@@ -29,8 +28,6 @@
 pub async fn play_machine(machine_name: &str) -> Result<(), Box<dyn std::error::Error>> {
     let appkey = get_appkey();
     let appkey_clone = appkey.clone(); // Clone the necessary data to avoid borrowed value error
-    let htb_path = format!("{}/.htb.conf", env::var("HOME").unwrap());
-    let htbconfig = HTBConfig::get_current_config(&htb_path);
     
     let mut machine_info = PlayingMachine::get_machine(machine_name, &appkey).await;
 
@@ -103,7 +100,7 @@
     
     machine_info.ip = get_ip(&appkey_clone).await; // For Starting Point machines and VIP and VIP+ VPNs, if I call the play API two times on the same machine, the old IP address associated to the machine can still live for some seconds providing a wrong IP related to the new same machine. For this reason, it is better to compute always the IP address (no problems for free VPNs because they associate always the same IP address to the same machine)
 
-    let mut user_info = PlayingUser::get_playinguser(&appkey_clone).await; // Before this it is needed to run HTB VPN to take the Attacker IP address
+    let user_info = PlayingUser::get_playinguser(&appkey_clone).await; // Before this it is needed to run HTB VPN to take the Attacker IP address
 
     let _ = print_banner();
 
@@ -115,10 +112,6 @@
         println!("{}Hey! You have already found the Root Flag! Keep it up!{}", BGREEN, RESET);
     }
 
-    if htbconfig.promptchange { //If the prompt is set to change during the playing...
-        change_shell(&mut machine_info, &mut user_info);
-    }
-
     // Writing /etc/hosts
     let _ = add_hosts(&machine_info);
 
